集合框架体系
collection ： List Set
Map ：HashMap ...
Collections 工具类
难点：底层实现|应用场景


p499 
数组的不足：创建时长度必须指定，且不再更改
           保存的必须是统一类型
           增删麻烦
  数组扩容：Person[] pe2 = new Person[pe1.length + 1]; 
           for(){}
           pe2[pe2.length-1] = new Person();

集合：可以动态保存任意多个对象
      提供了一系列操作crud


p500
集合框架体系
    Map
        HashMap
            LinkedHashMap
        TreeMap
        HashTable
            Properties
Iterable
    Collection
        List(接口
            ArrayList（类
            LinkedList 链表
            Vector
        Set
            HashSet
            TreeSet
集合：单列集合，双列集合（键值对）

List Set 的实现子类都是单列集合，存放的是E
Map  的实现子类都是双列集合，存放的是K-V对

package collection;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

public class Collection_ {
    @SuppressWarnings("all")
    public static void main(String[] args) {
        ArrayList arrayList = new ArrayList();
        arrayList.add("jack");        //单个元素
        arrayList.add("tom");
        HashMap hashMap = new HashMap();
        hashMap.put("N01","beijing");  //键值对
        hashMap.put("N02", "shanghai");
    }
}


p501 collection
继承了Iterable接口
其实现子类可以存放多个object元素
有序子接口List
无序子接口Set

常用方法：
实现子类ArrayList
           添加
        List list = new ArrayList();
        list.add("jack");
        list.add(10); //相当于list.add(new Integer(10));
        System.out.println(list);//[jack, 10]
        存放的不再是基本数据，而是对象
            删除remove
        list.remove(0);
        list.remove("jack");
            contains 清空
            size 元素个数
            addAll 添加一个集合
        ArrayList list2 = new ArrayList();
        list2.add("10");
        list2.add("jack");
        list.addAll(list2);
            isEmpty
            clear
            containsAll
            removeAll


p502  collection 遍历方法
iterator 迭代器对象
所有collection实现子类都可以用迭代器遍历
iterator只遍历，不存放
iterator.next返回的是object编译类型，运行类型取决于此前的定义

Iterator iterator = list2.iterator();
        while(iterator.hasNext()){System.out.println(iterator.next());}
      如果不用hasNext判断，next指向空时会抛出NoSuchElementException

        ArrayList col = new ArrayList();
        col.add(new Book("jack",10));
        col.add(new Book("jak",20));
        col.add(new Book("jk",30));

        Iterator iterator1 = col.iterator();
        while(iterator1.hasNext()){
            Object obj = iterator1.next();
            System.out.println(obj);
        }
        快捷：itit

当退出while循环后，iterator游标已经不再next，
希望再次遍历需要重置迭代器
           iterator = col.iterator();



p503 增强for遍历
for(元素类型 元素名：集合名/数组名){访问元素}
可以在Collection或数组使用
底层依然是迭代器
public class CollectionFor {
    public static void main(String[] args) {
        ArrayList col = new ArrayList();
        col.add(new Book("jack",10));
        col.add(new Book("jak",20));
        col.add(new Book("jk",30));

        for(Object obj : col){
            System.out.println(obj);
        }
        快捷：I
        
        int[] nums = {1,2,3,4,5};
        for(int i:nums){
            System.out.println(i);
        }
    }
}

p504 练习
创建3个Dog（name age），放入ArrayList 付给List引用
迭代器/for遍历
重写toString

        List list = new ArrayList();
        list.add(new Dog(10));
        list.add(new Dog(20));
        list.add(new Dog(30));
        list.add("dog");
        for (Object dog :list) {
            System.out.println(dog);
        }
        Iterator it = list.iterator();
        while (it.hasNext()) {
            Object dog = it.next();
            System.out.println(dog);
        }



p505  List 接口常用方法
List(接口
            ArrayList
            LinkedList 链表
            Vector

添加是有顺序的，取出与添加顺序一致，元素可以重复
支持索引

































