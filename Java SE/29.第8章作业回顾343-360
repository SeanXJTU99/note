p343  homework01
Person类 对象数组，name，age，job，按age从大到小排序

package com.sean.homework;

public class Homework01 {
    public static void main(String[] args) {
        Person[] persons = new Person[3];
        persons[0] = new Person("jack", 10,"javase");
        persons[1] = new Person("tom", 15,"bigdata");
        persons[2] = new Person("mary", 20,"php");
//        for (int i = 0; i < persons.length; i++) {
//            System.out.println(persons[i]);
//        }
//
        //使用冒泡
        Person temp = null;
        for (int i = 0; i < persons.length-1; i++) {
            for (int j = 0; j < persons.length-1-i ; j++) {
                //若前面人的年龄小于后面，交换
                if(persons[j].getAge() < persons[j+1].getAge()){
//                    按照名字长度
//              if(persons[j].getName().length() < persons[j+1].getName().length()){    
                    temp = persons[j];
                    persons[j] = persons[j+1];
                    persons[j+1] = temp;
                }
                
                
            }
        }
        for (Person person : persons) {
            System.out.println(person);
        }

    }
}
//Person类 对象数组，name，age，job，按age从大到小排序
class Person{
    private String name;
    private int age;
    private  String job;
    constructor
    getter setter
    toString
}




p344 homework02
      本类   同包    子类    不同包
pub    T      T       T       T
pro    T      T       T       F
dlt    t      t       f       f       (子类若在不同包则无法访问)
pri    t      f       f       f



p345 hw03


p346 hw04
通过继承实现员工工资核算打印
经理：1000+单日工资*天数*等级1.2
工人：单日工资*天数*等级1.0

子类获取属性：getName（）


p347 hw05
略


p348 hw06
class Grand{String name = "AA"; private int age = 100; public void g1(){}}
class Father extends Grand{String id = "001"; private double score; public void f1(){}}
class Son extends Father{String name = "BB"; public void g1(){} private void show(){}}

super this 可以调用那些属性和方法？
Father: f1: 
      super.name;super.g1()
      this.id;this.score;this.name;this.g1();this.f1()
Son: show:
      super.id;super.f1();super.name;super.g1()
      this.name;this.g1();this.show();this.id;this.f1();
      
p349 hw07



p350 hw08

p351 hw09
Point类，xy坐标构造器提供，子类LabeledPoint


p352 hw10
Doctor类，重写equals方法


p353 hw11
class Person{
public void run(){sout("person run");}
public void eat(){sout("person eat");}
}
class Student{
public void run(){sout("student run");}
public void study(){sout("student study")}
}

Person p = new Student(); 向上转型
p.run();//只能调用Person的方法，但执行的依然是Student run()
p.eat();

Student s =(Student)p; 向下转型
s.run();//Student run()
s.study();
s.eat();//继承自父类Person


p354 hw12 ==\equals
名称         概念        基本数据类型           引用类型
==       比较运算符       t，值相等             对象相等
equals   object类方法        f        默认判断对象相等，一般重写判断对象内容


p355 hw13
Person Student Teacher
定义方法，形参为person类，调用学生study或者老师teach
需要一个打印方法

p356
多态数组保存两个student，两个teacher，按年龄从高到低排序
用instanceof判断类，然后执行相应方法


p357 hw14


p358 hw15
多态：方法或对象有多种形态
     具体体现：
            方法重载，方法重写，
            对象多态：编译类型运行类型不一致给
                     运行类型可以变化，通过getClass查看运行类型


p359 动态绑定机制
调用对象的方法时，该方法会和对象的内存地址/运行类型绑定
属性哪里声明哪里使用


p360 回顾
IDEA
包管理
访问修饰符
封装
    属性私有化，公开方法，构造器
继承
    共有属性方法，特有属性方法，super，this，继承的本质是查找关系  
多态
    方法重写
        形参 方法名一致
    方法重载
    对象多态
        向上转型、向下转型、编译类型、运行类型
        动态绑定
        多态数组，多态参数
Object
    equals==
    hashCode
    toString
断点调试
零钱通

    














































































